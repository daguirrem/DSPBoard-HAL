ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.startup.main,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	main
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	main:
  28              	.LFB147:
  29              		.file 1 "src/main.c"
   1:src/main.c    **** /**
   2:src/main.c    ****  * @file main.c
   3:src/main.c    ****  * @author David A. Aguirre M. (daguirre.m@outlook.com)
   4:src/main.c    ****  * @brief Test for RCC HAL LIB
   5:src/main.c    ****  * @version d0.1
   6:src/main.c    ****  * @date 2022-04-18
   7:src/main.c    ****  * 
   8:src/main.c    ****  * @copyright MIT License, Copyright (c) 2022 David A. Aguirre M. @n @n
   9:src/main.c    ****  *
  10:src/main.c    ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
  11:src/main.c    ****  * of this software and associated documentation files (the "Software"), to deal
  12:src/main.c    ****  * in the Software without restriction, including without limitation the rights
  13:src/main.c    ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  14:src/main.c    ****  * copies of the Software, and to permit persons to whom the Software is
  15:src/main.c    ****  * furnished to do so, subject to the following conditions: @n @n
  16:src/main.c    ****  *
  17:src/main.c    ****  * The above copyright notice and this permission notice shall be included in all
  18:src/main.c    ****  * copies or substantial portions of the Software. @n @n
  19:src/main.c    **** 
  20:src/main.c    ****  * THE SOFTWARE IS PROVIDED  "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  21:src/main.c    ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  22:src/main.c    ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  23:src/main.c    ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  24:src/main.c    ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  25:src/main.c    ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  26:src/main.c    ****  * SOFTWARE.
  27:src/main.c    ****  * 
  28:src/main.c    ****  */
  29:src/main.c    **** 
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 2


  30:src/main.c    **** #include "system.h"
  31:src/main.c    **** #include "rcc.h"
  32:src/main.c    **** #include "delay.h"
  33:src/main.c    **** 
  34:src/main.c    **** int main (void)
  35:src/main.c    **** {
  30              		.loc 1 35 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  36:src/main.c    ****     /* SystemCoreClock should be HSE value ----------------|*/
  37:src/main.c    ****     /* 8 MHz                                               |*/
  38:src/main.c    ****     rcc_sysclk_select(RCC_SYSCLK_HSE);                 /*<-|*/                  /*[ok]*/
  35              		.loc 1 38 5 view .LVU1
  35:src/main.c    ****     /* SystemCoreClock should be HSE value ----------------|*/
  36              		.loc 1 35 1 is_stmt 0 view .LVU2
  37 0000 08B5     		push	{r3, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 38 5 view .LVU3
  42 0002 4FF48030 		mov	r0, #65536
  43 0006 FFF7FEFF 		bl	rcc_sysclk_select
  44              	.LVL0:
  39:src/main.c    **** 
  40:src/main.c    ****     /* SystemCoreClock should be PLL value ----------------|*/
  41:src/main.c    ****     /* 168 MHz                                             |*/
  42:src/main.c    ****     rcc_pll_param_cpte(168, RCC_PLLCLK_HSE);             /*|*/
  45              		.loc 1 42 5 is_stmt 1 view .LVU4
  46 000a 4FF48001 		mov	r1, #4194304
  47 000e A820     		movs	r0, #168
  48 0010 FFF7FEFF 		bl	rcc_pll_param_cpte
  49              	.LVL1:
  43:src/main.c    ****     rcc_pll_param_clr();                                 /*|*/
  50              		.loc 1 43 5 view .LVU5
  51 0014 FFF7FEFF 		bl	rcc_pll_param_clr
  52              	.LVL2:
  44:src/main.c    ****     rcc_pll_param_set();                                 /*|*/
  53              		.loc 1 44 5 view .LVU6
  54 0018 FFF7FEFF 		bl	rcc_pll_param_set
  55              	.LVL3:
  45:src/main.c    ****     rcc_sysclk_select(RCC_SYSCLK_PLL | RCC_SYSCLK_HSE);/*<-|*/                  /*[ok]*/
  56              		.loc 1 45 5 view .LVU7
  57 001c 1D48     		ldr	r0, .L5
  58 001e FFF7FEFF 		bl	rcc_sysclk_select
  59              	.LVL4:
  46:src/main.c    **** 
  47:src/main.c    ****     /* SystemCoreClock should be HSI value ----------------|*/
  48:src/main.c    ****     /* 16 MHz                                              |*/
  49:src/main.c    ****     rcc_sysclk_select(RCC_SYSCLK_HSI);                 /*<-|*/                  /*[ok]*/
  60              		.loc 1 49 5 view .LVU8
  61 0022 0120     		movs	r0, #1
  62 0024 FFF7FEFF 		bl	rcc_sysclk_select
  63              	.LVL5:
  50:src/main.c    **** 
  51:src/main.c    ****     /* SystemCoreClock should be PLL value ----------------|*/
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 3


  52:src/main.c    ****     /* 100 MHz                                             |*/
  53:src/main.c    ****     rcc_pll_param_cpte_set(100, RCC_PLLCLK_HSE);         /*|*/
  64              		.loc 1 53 5 view .LVU9
  65              	.LBB18:
  66              	.LBI18:
  67              		.file 2 "./include/rcc.h"
   1:./include/rcc.h **** /**
   2:./include/rcc.h ****  * @file rcc.h
   3:./include/rcc.h ****  * @author David A. Aguirre M. (daguirre.m@outlook.com)
   4:./include/rcc.h ****  * @brief RCC - Custom HAL for DSP Board SDK.
   5:./include/rcc.h ****  * @version d0.2
   6:./include/rcc.h ****  * @date 2022-05-02
   7:./include/rcc.h ****  *
   8:./include/rcc.h ****  * @copyright MIT License, Copyright (c) 2022 David A. Aguirre M. @n @n
   9:./include/rcc.h ****  *
  10:./include/rcc.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
  11:./include/rcc.h ****  * of this software and associated documentation files (the "Software"), to deal
  12:./include/rcc.h ****  * in the Software without restriction, including without limitation the rights
  13:./include/rcc.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  14:./include/rcc.h ****  * copies of the Software, and to permit persons to whom the Software is
  15:./include/rcc.h ****  * furnished to do so, subject to the following conditions: @n @n
  16:./include/rcc.h ****  *
  17:./include/rcc.h ****  * The above copyright notice and this permission notice shall be included in all
  18:./include/rcc.h ****  * copies or substantial portions of the Software. @n @n
  19:./include/rcc.h ****  *
  20:./include/rcc.h ****  * THE SOFTWARE IS PROVIDED  "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  21:./include/rcc.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  22:./include/rcc.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  23:./include/rcc.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  24:./include/rcc.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  25:./include/rcc.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  26:./include/rcc.h ****  * SOFTWARE.
  27:./include/rcc.h ****  *
  28:./include/rcc.h ****  */
  29:./include/rcc.h **** 
  30:./include/rcc.h **** /**
  31:./include/rcc.h ****  * @todo Backupdomain control implementation
  32:./include/rcc.h ****  * @todo Clock ctrl & status implementation
  33:./include/rcc.h ****  * @todo Spread Spectrum Clock Generator implementation
  34:./include/rcc.h ****  * @todo IÂ²S implementation
  35:./include/rcc.h ****  * @todo PLL Q Individual Compute & Set
  36:./include/rcc.h ****  * @todo APB[1,2] Individual Preescaleers Set
  37:./include/rcc.h ****  * @todo MCU Clock Output Implementation
  38:./include/rcc.h ****  * @todo RTC Preescalers implementation
  39:./include/rcc.h ****  * @todo RCC Interrupts
  40:./include/rcc.h ****  * 
  41:./include/rcc.h ****  */
  42:./include/rcc.h **** 
  43:./include/rcc.h **** #ifndef _RCC_H_
  44:./include/rcc.h **** #define _RCC_H_
  45:./include/rcc.h **** 
  46:./include/rcc.h **** #ifdef __cplusplus
  47:./include/rcc.h **** extern "C" {
  48:./include/rcc.h **** #endif
  49:./include/rcc.h **** 
  50:./include/rcc.h **** /**
  51:./include/rcc.h ****  * @addtogroup rcc RCC
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 4


  52:./include/rcc.h ****  */
  53:./include/rcc.h **** 
  54:./include/rcc.h **** /**
  55:./include/rcc.h ****  * @defgroup public_rcc Public
  56:./include/rcc.h ****  * @ingroup rcc
  57:./include/rcc.h ****  */
  58:./include/rcc.h **** 
  59:./include/rcc.h **** #include "system.h"
  60:./include/rcc.h **** 
  61:./include/rcc.h **** /*----------------------------------------------------------------------------*/
  62:./include/rcc.h **** /* Enums*/
  63:./include/rcc.h **** /*----------------------------------------------------------------------------*/
  64:./include/rcc.h **** 
  65:./include/rcc.h **** /**
  66:./include/rcc.h ****  * @ingroup public_rcc
  67:./include/rcc.h ****  * @brief System core clocks.
  68:./include/rcc.h ****  *
  69:./include/rcc.h ****  * Source clocks than can be configured as Systen core clock.
  70:./include/rcc.h ****  */
  71:./include/rcc.h **** typedef enum
  72:./include/rcc.h **** {
  73:./include/rcc.h ****     RCC_SYSCLK_HSI  = RCC_CR_HSION, /*!< System core clock from hsi source*/
  74:./include/rcc.h ****     RCC_SYSCLK_HSE  = RCC_CR_HSEON, /*!< System core clock from hse source*/
  75:./include/rcc.h ****     RCC_SYSCLK_PLL  = RCC_CR_PLLON, /*!< System core clock from pll source*/
  76:./include/rcc.h ****     RCC_SYSCLK_END /*!< End of rcc_sysclk enum */
  77:./include/rcc.h **** } rcc_sysclk_t;
  78:./include/rcc.h **** 
  79:./include/rcc.h **** /**
  80:./include/rcc.h ****  * @ingroup public_rcc
  81:./include/rcc.h ****  * @brief PLL surce clocks.
  82:./include/rcc.h ****  *
  83:./include/rcc.h ****  * Source clocks than can be configured as PLL Input clock source.
  84:./include/rcc.h ****  */
  85:./include/rcc.h **** typedef enum
  86:./include/rcc.h **** {
  87:./include/rcc.h ****     RCC_PLLCLK_HSI  = RCC_PLLCFGR_PLLSRC_HSI, /*!< PLL input clock from hsi source*/
  88:./include/rcc.h ****     RCC_PLLCLK_HSE  = RCC_PLLCFGR_PLLSRC_HSE, /*!< PLL input clock from hse source*/
  89:./include/rcc.h ****     RCC_PLLCLK_NONE = 0xFFFFFFFE, /*!< PLL disable input */
  90:./include/rcc.h ****     RCC_PLLCLK_END /*!< End of rcc_pllclk enum */
  91:./include/rcc.h **** } rcc_pllclk_t;
  92:./include/rcc.h **** 
  93:./include/rcc.h **** /**
  94:./include/rcc.h ****  * @ingroup public_rcc
  95:./include/rcc.h ****  * @brief AHB1 peripherals masks.
  96:./include/rcc.h ****  *
  97:./include/rcc.h ****  * Peripherals mask at AHB1 BUS.
  98:./include/rcc.h ****  */
  99:./include/rcc.h **** typedef enum
 100:./include/rcc.h **** {
 101:./include/rcc.h ****     RCC_AHB1_GPIOA      = RCC_AHB1ENR_GPIOAEN,      /*!< GPIOA Enable mask */
 102:./include/rcc.h ****     RCC_AHB1_GPIOB      = RCC_AHB1ENR_GPIOBEN,      /*!< GPIOB Enable mask */
 103:./include/rcc.h ****     RCC_AHB1_GPIOC      = RCC_AHB1ENR_GPIOCEN,      /*!< GPIOC Enable mask */
 104:./include/rcc.h ****     RCC_AHB1_GPIOD      = RCC_AHB1ENR_GPIODEN,      /*!< GPIOD Enable mask */
 105:./include/rcc.h ****     RCC_AHB1_GPIOE      = RCC_AHB1ENR_GPIOEEN,      /*!< GPIOE Enable mask */
 106:./include/rcc.h ****     RCC_AHB1_GPIOF      = RCC_AHB1ENR_GPIOFEN,      /*!< GPIOF Enable mask */
 107:./include/rcc.h ****     RCC_AHB1_GPIOG      = RCC_AHB1ENR_GPIOGEN,      /*!< GPIOG Enable mask */
 108:./include/rcc.h ****     RCC_AHB1_GPIOH      = RCC_AHB1ENR_GPIOHEN,      /*!< GPIOH Enable mask */
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 5


 109:./include/rcc.h ****     RCC_AHB1_GPIOI      = RCC_AHB1ENR_GPIOIEN,      /*!< GPIOI Enable mask */
 110:./include/rcc.h ****     RCC_AHB1_CRC        = RCC_AHB1ENR_CRCEN,        /*!< CRC Enable mask */
 111:./include/rcc.h ****     RCC_AHB1_BKPSRAM    = RCC_AHB1ENR_BKPSRAMEN,    /*!< BKPSRAM Enable mask */
 112:./include/rcc.h ****     RCC_AHB1_CCMDATA    = RCC_AHB1ENR_CCMDATARAMEN, /*!< CCMDATA Enable mask */
 113:./include/rcc.h ****     RCC_AHB1_DMA1       = RCC_AHB1ENR_DMA1EN,       /*!< DMA1 Enable mask */
 114:./include/rcc.h ****     RCC_AHB1_DMA2       = RCC_AHB1ENR_DMA2EN,       /*!< DMA2 Enable mask */
 115:./include/rcc.h ****     RCC_AHB1_ETHMAC     = RCC_AHB1ENR_ETHMACEN,     /*!< ETHMAC Enable mask */
 116:./include/rcc.h ****     RCC_AHB1_ETHMACTX   = RCC_AHB1ENR_ETHMACTXEN,   /*!< ETHMACTX Enable mask */
 117:./include/rcc.h ****     RCC_AHB1_ETHMACRX   = RCC_AHB1ENR_ETHMACRXEN,   /*!< ETHMACRX Enable mask */
 118:./include/rcc.h ****     RCC_AHB1_ETHMACPTP  = RCC_AHB1ENR_ETHMACPTPEN,  /*!< ETHMACPTP Enable mask */
 119:./include/rcc.h ****     RCC_AHB1_OTGHS      = RCC_AHB1ENR_OTGHSEN,      /*!< OTGHS Enable mask */
 120:./include/rcc.h ****     RCC_AHB1_OTGHSULPI  = RCC_AHB1ENR_OTGHSULPIEN,  /*!< OTGHS ULPI Enable mask */
 121:./include/rcc.h ****     RCC_AHB1_END /*!< End of rcc_ahb1 enum */
 122:./include/rcc.h **** } rcc_ahb1_t;
 123:./include/rcc.h **** 
 124:./include/rcc.h **** /**
 125:./include/rcc.h ****  * @ingroup public_rcc
 126:./include/rcc.h ****  * @brief AHB2 peripherals masks.
 127:./include/rcc.h ****  *
 128:./include/rcc.h ****  * Peripherals mask at AHB2 BUS.
 129:./include/rcc.h ****  */
 130:./include/rcc.h **** typedef enum
 131:./include/rcc.h **** {
 132:./include/rcc.h ****     RCC_AHB2_DCMI   = RCC_AHB2ENR_DCMIEN,   /*!< DCMI Enable mask */
 133:./include/rcc.h **** #if defined(RCC_AHB2ENR_CRYPEN)
 134:./include/rcc.h ****     RCC_AHB2_CRYP   = RCC_AHB2ENR_CRYPEN,   /*!< CRYP Enable mask */
 135:./include/rcc.h **** #endif /* defined(RCC_AHB2ENR_CRYPEN) */
 136:./include/rcc.h **** #if defined(RCC_AHB2ENR_HASHEN)
 137:./include/rcc.h ****     RCC_AHB2_HASH   = RCC_AHB2ENR_HASHEN,   /*!< HASH Enable mask */ 
 138:./include/rcc.h **** #endif /* defined(RCC_AHB2ENR_HASHEN) */
 139:./include/rcc.h ****     RCC_AHB2_RNG    = RCC_AHB2ENR_RNGEN,    /*!< RNG Enable mask */
 140:./include/rcc.h ****     RCC_AHB2_OTGFS  = RCC_AHB2ENR_OTGFSEN,  /*!< OTGFS Enable mask */
 141:./include/rcc.h ****     RCC_AHB2_END /*!< End of rcc_ahb2 enum */
 142:./include/rcc.h **** } rcc_ahb2_t;
 143:./include/rcc.h **** 
 144:./include/rcc.h **** /**
 145:./include/rcc.h ****  * @ingroup public_rcc
 146:./include/rcc.h ****  * @brief AHB3 peripherals masks.
 147:./include/rcc.h ****  *
 148:./include/rcc.h ****  * Peripherals mask at AHB3 BUS.
 149:./include/rcc.h ****  */
 150:./include/rcc.h **** typedef enum
 151:./include/rcc.h **** {
 152:./include/rcc.h ****     RCC_AHB3_FSMC   = RCC_AHB3ENR_FSMCEN,   /*!< FSMC Enable mask */
 153:./include/rcc.h ****     RCC_AHB3_END /*!< End of rcc_ahb3 enum */
 154:./include/rcc.h **** } rcc_ahb3_t;
 155:./include/rcc.h **** 
 156:./include/rcc.h **** /**
 157:./include/rcc.h ****  * @ingroup public_rcc
 158:./include/rcc.h ****  * @brief APB1 peripherals masks.
 159:./include/rcc.h ****  *
 160:./include/rcc.h ****  * Peripherals mask at APB1 BUS.
 161:./include/rcc.h ****  */
 162:./include/rcc.h **** typedef enum
 163:./include/rcc.h **** {
 164:./include/rcc.h ****     RCC_APB1_TIM2   = RCC_APB1ENR_TIM2EN,   /*!< TIM2 Enable mask */
 165:./include/rcc.h ****     RCC_APB1_TIM3   = RCC_APB1ENR_TIM3EN,   /*!< TIM3 Enable mask */
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 6


 166:./include/rcc.h ****     RCC_APB1_TIM4   = RCC_APB1ENR_TIM4EN,   /*!< TIM4 Enable mask */
 167:./include/rcc.h ****     RCC_APB1_TIM5   = RCC_APB1ENR_TIM5EN,   /*!< TIM5 Enable mask */
 168:./include/rcc.h ****     RCC_APB1_TIM6   = RCC_APB1ENR_TIM6EN,   /*!< TIM6 Enable mask */
 169:./include/rcc.h ****     RCC_APB1_TIM7   = RCC_APB1ENR_TIM7EN,   /*!< TIM7 Enable mask */
 170:./include/rcc.h ****     RCC_APB1_TIM12  = RCC_APB1ENR_TIM12EN,  /*!< TIM12 Enable mask */
 171:./include/rcc.h ****     RCC_APB1_TIM13  = RCC_APB1ENR_TIM13EN,  /*!< TIM13 Enable mask */
 172:./include/rcc.h ****     RCC_APB1_TIM14  = RCC_APB1ENR_TIM14EN,  /*!< TIM14 Enable mask */
 173:./include/rcc.h ****     RCC_APB1_WWDG   = RCC_APB1ENR_WWDGEN,   /*!< WWDG Enable mask */
 174:./include/rcc.h ****     RCC_APB1_SPI2   = RCC_APB1ENR_SPI2EN,   /*!< SPI2 Enable mask */
 175:./include/rcc.h ****     RCC_APB1_SPI3   = RCC_APB1ENR_SPI3EN,   /*!< SPI3 Enable mask */
 176:./include/rcc.h ****     RCC_APB1_USART2 = RCC_APB1ENR_USART2EN, /*!< USART2 Enable mask */
 177:./include/rcc.h ****     RCC_APB1_USART3 = RCC_APB1ENR_USART3EN, /*!< USART3 Enable mask */
 178:./include/rcc.h ****     RCC_APB1_UART4  = RCC_APB1ENR_UART4EN,  /*!< UART4 Enable mask */
 179:./include/rcc.h ****     RCC_APB1_UART5  = RCC_APB1ENR_UART5EN,  /*!< UART5 Enable mask */
 180:./include/rcc.h ****     RCC_APB1_I2C1   = RCC_APB1ENR_I2C1EN,   /*!< I2C1 Enable mask */
 181:./include/rcc.h ****     RCC_APB1_I2C2   = RCC_APB1ENR_I2C2EN,   /*!< I2C2 Enable mask */
 182:./include/rcc.h ****     RCC_APB1_I2C3   = RCC_APB1ENR_I2C3EN,   /*!< I2C3 Enable mask */
 183:./include/rcc.h ****     RCC_APB1_CAN1   = RCC_APB1ENR_CAN1EN,   /*!< CAN1 Enable mask */
 184:./include/rcc.h ****     RCC_APB1_CAN2   = RCC_APB1ENR_CAN2EN,   /*!< CAN2 Enable mask */
 185:./include/rcc.h ****     RCC_APB1_PWR    = RCC_APB1ENR_PWREN,    /*!< PWR Enable mask */
 186:./include/rcc.h ****     RCC_APB1_DAC    = RCC_APB1ENR_DACEN,    /*!< DAC Enable mask */
 187:./include/rcc.h ****     RCC_APB1_END /*!< End of rcc_apb1 enum */
 188:./include/rcc.h **** } rcc_apb1_t;
 189:./include/rcc.h **** 
 190:./include/rcc.h **** /**
 191:./include/rcc.h ****  * @ingroup public_rcc
 192:./include/rcc.h ****  * @brief APB2 peripherals masks.
 193:./include/rcc.h ****  *
 194:./include/rcc.h ****  * Peripherals mask at APB2 BUS.
 195:./include/rcc.h ****  */
 196:./include/rcc.h **** typedef enum
 197:./include/rcc.h **** {
 198:./include/rcc.h ****     RCC_APB2_TIM1   = RCC_APB2ENR_TIM1EN,   /*!< TIM1 Enable mask */
 199:./include/rcc.h ****     RCC_APB2_TIM8   = RCC_APB2ENR_TIM8EN,   /*!< TIM8 Enable mask */
 200:./include/rcc.h ****     RCC_APB2_USART1 = RCC_APB2ENR_USART1EN, /*!< USART1 Enable mask */
 201:./include/rcc.h ****     RCC_APB2_USART6 = RCC_APB2ENR_USART6EN, /*!< USART6 Enable mask */
 202:./include/rcc.h ****     RCC_APB2_ADC1   = RCC_APB2ENR_ADC1EN,   /*!< ADC1 Enable mask */
 203:./include/rcc.h ****     RCC_APB2_ADC2   = RCC_APB2ENR_ADC2EN,   /*!< ADC2 Enable mask */
 204:./include/rcc.h ****     RCC_APB2_ADC3   = RCC_APB2ENR_ADC3EN,   /*!< ADC3 Enable mask */
 205:./include/rcc.h ****     RCC_APB2_SDIO   = RCC_APB2ENR_SDIOEN,   /*!< SDIO Enable mask */
 206:./include/rcc.h ****     RCC_APB2_SPI1   = RCC_APB2ENR_SPI1EN,   /*!< SPI1 Enable mask */
 207:./include/rcc.h ****     RCC_APB2_SYSCFG = RCC_APB2ENR_SYSCFGEN, /*!< SYSCFG Enable mask */
 208:./include/rcc.h ****     RCC_APB2_TIM9   = RCC_APB2ENR_TIM9EN,   /*!< TIM9 Enable mask */
 209:./include/rcc.h ****     RCC_APB2_TIM10  = RCC_APB2ENR_TIM10EN,  /*!< TIM10 Enable mask */
 210:./include/rcc.h ****     RCC_APB2_TIM11  = RCC_APB2ENR_TIM11EN,  /*!< TIM11 Enable mask */
 211:./include/rcc.h ****     RCC_APB2_END /*!< End of rcc_apb2 enum */
 212:./include/rcc.h **** } rcc_apb2_t;
 213:./include/rcc.h **** 
 214:./include/rcc.h **** /*----------------------------------------------------------------------------*/
 215:./include/rcc.h **** /* Functions */
 216:./include/rcc.h **** /*----------------------------------------------------------------------------*/
 217:./include/rcc.h **** 
 218:./include/rcc.h **** /** ### rcc:system_core_clock:select
 219:./include/rcc.h ****  * @ingroup public_rcc
 220:./include/rcc.h ****  * @brief Select and inicializate the system core clock.
 221:./include/rcc.h ****  *
 222:./include/rcc.h ****  * Switch the system core clock source to a target 'source'.
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 7


 223:./include/rcc.h ****  *
 224:./include/rcc.h ****  * @param[in] source System target source clock.
 225:./include/rcc.h ****  *
 226:./include/rcc.h ****  * @return None.
 227:./include/rcc.h ****  * 
 228:./include/rcc.h ****  * @note 1. If a PLL is the target clock you must define the PLL source clock with
 229:./include/rcc.h ****  *       an OR operator.
 230:./include/rcc.h ****  * 
 231:./include/rcc.h ****  * @note 2. If a PLL is the target clock you must fisrt compute the PLL parameters
 232:./include/rcc.h ****  *       and set it before switch the system core clock.
 233:./include/rcc.h ****  * 
 234:./include/rcc.h ****  * @note 3. Others clocks will be deactivated after call this function.
 235:./include/rcc.h ****  *
 236:./include/rcc.h ****  * E.g.
 237:./include/rcc.h ****  * * For HSE or HSI:
 238:./include/rcc.h ****  * @code
 239:./include/rcc.h ****  * ...
 240:./include/rcc.h ****  * // This enable and switch the system core clock to HSE target
 241:./include/rcc.h ****  * rcc_sysclk_select(RCC_SYSCLK_HSE);
 242:./include/rcc.h ****  * ...
 243:./include/rcc.h ****  * @endcode
 244:./include/rcc.h ****  * * For PLL:
 245:./include/rcc.h ****  * @code
 246:./include/rcc.h ****  * ...
 247:./include/rcc.h ****  * // This enable and switch the system core clock to PLL target with
 248:./include/rcc.h ****  * // HSE as input PLL clock
 249:./include/rcc.h ****  * rcc_sysclk_select(RCC_SYSCLK_PLL | RCC_SYSCLK_HSE);
 250:./include/rcc.h ****  * ...
 251:./include/rcc.h ****  * @endcode
 252:./include/rcc.h ****  */
 253:./include/rcc.h **** void rcc_sysclk_select(rcc_sysclk_t source);
 254:./include/rcc.h **** 
 255:./include/rcc.h **** /** ### rcc:pll:parameter:compute
 256:./include/rcc.h ****  * @ingroup public_rcc
 257:./include/rcc.h ****  * @brief Compute PLL configuration parameters.
 258:./include/rcc.h ****  *
 259:./include/rcc.h ****  * Compute M,N,P and Q PLL parameters from the desired clock for the PLL and save
 260:./include/rcc.h ****  * them on static internal variable [pll_parameters].
 261:./include/rcc.h ****  *
 262:./include/rcc.h ****  * @param[in] pll_clk_out Desired PLL clock [MHz].
 263:./include/rcc.h ****  * @param[in] pll_clk_in PLL source input clock.
 264:./include/rcc.h ****  *
 265:./include/rcc.h ****  * @return None.
 266:./include/rcc.h ****  *
 267:./include/rcc.h ****  * @note Always Q parameter will compute to get a 48 MHz PLL48CK clock, if you
 268:./include/rcc.h ****  *       need less you must call rcc_pll_param_q_set function.
 269:./include/rcc.h ****  *
 270:./include/rcc.h ****  * E.g.
 271:./include/rcc.h ****  * @code
 272:./include/rcc.h ****  * ...
 273:./include/rcc.h ****  * // It will calculate the parameters to get 168 MHz at PLL output with HSE
 274:./include/rcc.h ****  * // as input clock source to PLL
 275:./include/rcc.h ****  * rcc_pll_param_cpte(168, PLL_SRC_HSE);
 276:./include/rcc.h ****  * ...
 277:./include/rcc.h ****  * @endcode
 278:./include/rcc.h ****  */
 279:./include/rcc.h **** void rcc_pll_param_cpte(uint8_t pll_clk_out, rcc_pllclk_t pll_clk_in);
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 8


 280:./include/rcc.h **** 
 281:./include/rcc.h **** /** ### rcc:pll:parameter:set
 282:./include/rcc.h ****  * @ingroup public_rcc
 283:./include/rcc.h ****  * @brief Set PLL parameters stored on static internal variable [pll_parameters].
 284:./include/rcc.h ****  * 
 285:./include/rcc.h ****  * Set P, M, N, Q, PREAHB1 & PREAHB2 parameters on RCC_PLLCFGR Register.
 286:./include/rcc.h ****  * 
 287:./include/rcc.h ****  * @return None.
 288:./include/rcc.h ****  * E.g.
 289:./include/rcc.h ****  * @code
 290:./include/rcc.h ****  * ...
 291:./include/rcc.h ****  * // It will set the parameters stored on internal pll_paramenters variable
 292:./include/rcc.h ****  * // to PLL
 293:./include/rcc.h ****  * rcc_pll_param_set();
 294:./include/rcc.h ****  * ...
 295:./include/rcc.h ****  * @endcode
 296:./include/rcc.h ****  */
 297:./include/rcc.h **** void rcc_pll_param_set(void);
 298:./include/rcc.h **** 
 299:./include/rcc.h **** /** ### rcc:pll:parameter:clear
 300:./include/rcc.h ****  * @ingroup public_rcc
 301:./include/rcc.h ****  * @brief Clear the PLL parameters.
 302:./include/rcc.h ****  * 
 303:./include/rcc.h ****  * Clear P, M, N, Q, PREAHB1 & PREAHB2 parameters on RCC_PLLCFGR Register.
 304:./include/rcc.h ****  *
 305:./include/rcc.h ****  * @return None.
 306:./include/rcc.h ****  * 
 307:./include/rcc.h ****  * E.g.
 308:./include/rcc.h ****  * @code
 309:./include/rcc.h ****  * ...
 310:./include/rcc.h ****  * // It will clear the parameters on PLL
 311:./include/rcc.h ****  * rcc_pll_param_clr();
 312:./include/rcc.h ****  * ...
 313:./include/rcc.h ****  * @endcode
 314:./include/rcc.h ****  */
 315:./include/rcc.h **** void rcc_pll_param_clr(void);
 316:./include/rcc.h **** 
 317:./include/rcc.h **** /** ### rcc:pll:parameter:compute_and_set
 318:./include/rcc.h ****  * @ingroup public_rcc
 319:./include/rcc.h ****  * @brief Compute & set the PLL Parameters.
 320:./include/rcc.h ****  * 
 321:./include/rcc.h ****  * Call rcc_pll_param_cpte, rcc_pll_param_clr & rcc_pll_param_set functions.
 322:./include/rcc.h ****  * 
 323:./include/rcc.h ****  * @param[in] pll_clk_out Desired PLL clock [MHz].
 324:./include/rcc.h ****  * @param[in] pll_clk_in PLL source input clock.
 325:./include/rcc.h ****  * 
 326:./include/rcc.h ****  * @return None.
 327:./include/rcc.h ****  * 
 328:./include/rcc.h ****  * E.g.
 329:./include/rcc.h ****  * @code
 330:./include/rcc.h ****  * ...
 331:./include/rcc.h ****  * // It will calculate the parameters to get 168 MHz at PLL output with HSE
 332:./include/rcc.h ****  * // as input clock source to PLL and then sets to PLL registers
 333:./include/rcc.h ****  * rcc_pll_param_cpte_set(168, PLL_SRC_HSE);
 334:./include/rcc.h ****  * ...
 335:./include/rcc.h ****  * @endcode
 336:./include/rcc.h ****  */
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 9


 337:./include/rcc.h **** __FORCE_INLINE void rcc_pll_param_cpte_set(uint8_t pll_clk_out, 
  68              		.loc 2 337 21 view .LVU10
  69              	.LBB19:
 338:./include/rcc.h ****     rcc_pllclk_t pll_clk_in
 339:./include/rcc.h **** )
 340:./include/rcc.h **** {
 341:./include/rcc.h ****     rcc_pll_param_cpte(pll_clk_out, pll_clk_in);
  70              		.loc 2 341 5 view .LVU11
  71 0028 4FF48001 		mov	r1, #4194304
  72 002c 6420     		movs	r0, #100
  73 002e FFF7FEFF 		bl	rcc_pll_param_cpte
  74              	.LVL6:
 342:./include/rcc.h ****     rcc_pll_param_clr();
  75              		.loc 2 342 5 view .LVU12
  76 0032 FFF7FEFF 		bl	rcc_pll_param_clr
  77              	.LVL7:
 343:./include/rcc.h ****     rcc_pll_param_set();
  78              		.loc 2 343 5 view .LVU13
  79 0036 FFF7FEFF 		bl	rcc_pll_param_set
  80              	.LVL8:
  81              		.loc 2 343 5 is_stmt 0 view .LVU14
  82              	.LBE19:
  83              	.LBE18:
  54:src/main.c    ****     rcc_sysclk_select(RCC_SYSCLK_PLL | RCC_SYSCLK_HSE);/*<-|*/                  /*[ok]*/
  84              		.loc 1 54 5 is_stmt 1 view .LVU15
  85 003a 1648     		ldr	r0, .L5
  86 003c FFF7FEFF 		bl	rcc_sysclk_select
  87              	.LVL9:
  55:src/main.c    **** 
  56:src/main.c    ****     /* SystemCoreClock should be HSE value ----------------|*/
  57:src/main.c    ****     /* 8 MHz                                               |*/
  58:src/main.c    ****     rcc_sysclk_select(RCC_SYSCLK_HSE);                 /*<-|*/                  /*[ok]*/
  88              		.loc 1 58 5 view .LVU16
  89 0040 4FF48030 		mov	r0, #65536
  90 0044 FFF7FEFF 		bl	rcc_sysclk_select
  91              	.LVL10:
  59:src/main.c    **** 
  60:src/main.c    ****     /* GPIOA clock should be enabled ----------------------|*/
  61:src/main.c    ****     rcc_clk_en_ahb1(RCC_AHB1_GPIOA);                   /*<-|*/                  /*[ok]*/
  92              		.loc 1 61 5 view .LVU17
  93              	.LBB20:
  94              	.LBI20:
 344:./include/rcc.h **** }
 345:./include/rcc.h **** 
 346:./include/rcc.h **** /** ### rcc:clock:enable:AHB1
 347:./include/rcc.h ****  * @ingroup public_rcc
 348:./include/rcc.h ****  * @brief Enable clock to AHB1 peripherial/s.
 349:./include/rcc.h ****  * 
 350:./include/rcc.h ****  * Allow enable following clock to peripherials on RCC_APB1ENR register:
 351:./include/rcc.h ****  *  * GPIO[A,B,C...I].
 352:./include/rcc.h ****  *  * CRC.
 353:./include/rcc.h ****  *  * Backup SRAM interface.
 354:./include/rcc.h ****  *  * CCM Data RAM interface.
 355:./include/rcc.h ****  *  * DMA[1:2].
 356:./include/rcc.h ****  *  * Ethernet [MAC, TX, RX, PTP].
 357:./include/rcc.h ****  *  * USB [HS, HS_ULPI].
 358:./include/rcc.h ****  *
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 10


 359:./include/rcc.h ****  * @param[in] mask AHB1 Peripheral/s mask to be enabled.
 360:./include/rcc.h ****  * 
 361:./include/rcc.h ****  * @return None.
 362:./include/rcc.h ****  * 
 363:./include/rcc.h ****  * @note 1. You can enable multiple peripherals at time passing each of them 
 364:./include/rcc.h ****  *          with an OR operator.
 365:./include/rcc.h ****  * @note 2. It is a forced inline function.
 366:./include/rcc.h ****  * 
 367:./include/rcc.h ****  * E.g. @n
 368:./include/rcc.h ****  * For one peripheral enable:
 369:./include/rcc.h ****  * @code
 370:./include/rcc.h ****  * ...
 371:./include/rcc.h ****  * // This enable clock to GPIOA peripheral
 372:./include/rcc.h ****  * rcc_clk_en_ahb1(RCC_AHB1_GPIOA);
 373:./include/rcc.h ****  * ...
 374:./include/rcc.h ****  * @endcode
 375:./include/rcc.h ****  * For multiple peripherals enable:
 376:./include/rcc.h ****  * @code
 377:./include/rcc.h ****  * ...
 378:./include/rcc.h ****  * // This enable clock to GPIOA & GPIOB peripheral
 379:./include/rcc.h ****  * rcc_clk_en_ahb1(RCC_AHB1_GPIOA | RCC_AHB1_GPIOB);
 380:./include/rcc.h ****  * ...
 381:./include/rcc.h ****  * @endcode
 382:./include/rcc.h ****  */
 383:./include/rcc.h **** __FORCE_INLINE void rcc_clk_en_ahb1(rcc_ahb1_t mask)
  95              		.loc 2 383 21 view .LVU18
  96              	.LBB21:
 384:./include/rcc.h **** {
 385:./include/rcc.h ****     RCC->AHB1ENR |= mask;
  97              		.loc 2 385 5 view .LVU19
  98              		.loc 2 385 18 is_stmt 0 view .LVU20
  99 0048 134B     		ldr	r3, .L5+4
 100 004a 1A6B     		ldr	r2, [r3, #48]
 101 004c 42F00102 		orr	r2, r2, #1
 102 0050 1A63     		str	r2, [r3, #48]
 103              	.LVL11:
 104              		.loc 2 385 18 view .LVU21
 105              	.LBE21:
 106              	.LBE20:
  62:src/main.c    **** 
  63:src/main.c    ****     /* GPIOA clock should be disabled ---------------------|*/
  64:src/main.c    ****     rcc_clk_dis_ahb1(RCC_AHB1_GPIOA);                  /*<-|*/                  /*[ok]*/
 107              		.loc 1 64 5 is_stmt 1 view .LVU22
 108              	.LBB22:
 109              	.LBI22:
 386:./include/rcc.h **** }
 387:./include/rcc.h **** 
 388:./include/rcc.h **** /** ### rcc:clock:disable:AHB1
 389:./include/rcc.h ****  * @ingroup public_rcc
 390:./include/rcc.h ****  * @brief Disable clock to AHB1 peripherial/s.
 391:./include/rcc.h ****  * 
 392:./include/rcc.h ****  * Allow disable following clock to peripherials on RCC_APB1ENR register:
 393:./include/rcc.h ****  *  * GPIO[A,B,C,...I].
 394:./include/rcc.h ****  *  * CRC.
 395:./include/rcc.h ****  *  * Backup SRAM interface.
 396:./include/rcc.h ****  *  * CCM Data RAM interface.
 397:./include/rcc.h ****  *  * DMA[1,2].
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 11


 398:./include/rcc.h ****  *  * Ethernet [MAC, TX, RX, PTP].
 399:./include/rcc.h ****  *  * USB [HS, HS_ULPI].
 400:./include/rcc.h ****  *
 401:./include/rcc.h ****  * @param[in] mask AHB1 Peripheral/s mask to be disabled.
 402:./include/rcc.h ****  * 
 403:./include/rcc.h ****  * @return None.
 404:./include/rcc.h ****  * 
 405:./include/rcc.h ****  * @note 1. You can disable multiple peripherals at time passing each of them 
 406:./include/rcc.h ****  *          with an OR operator.
 407:./include/rcc.h ****  * @note 2. It is a forced inline function.
 408:./include/rcc.h ****  * 
 409:./include/rcc.h ****  * E.g. @n
 410:./include/rcc.h ****  * For one peripheral disable:
 411:./include/rcc.h ****  * @code
 412:./include/rcc.h ****  * ...
 413:./include/rcc.h ****  * // This disable clock to GPIOA peripheral
 414:./include/rcc.h ****  * rcc_clk_dis_ahb1(RCC_AHB1_GPIOA);
 415:./include/rcc.h ****  * ...
 416:./include/rcc.h ****  * @endcode
 417:./include/rcc.h ****  * For multiple peripheral disable:
 418:./include/rcc.h ****  * @code
 419:./include/rcc.h ****  * ...
 420:./include/rcc.h ****  * // This disable clock to GPIOA & GPIOB peripheral
 421:./include/rcc.h ****  * rcc_clk_dis_ahb1(RCC_AHB1_GPIOA | RCC_AHB1_GPIOB);
 422:./include/rcc.h ****  * ...
 423:./include/rcc.h ****  * @endcode
 424:./include/rcc.h ****  */
 425:./include/rcc.h **** __FORCE_INLINE void rcc_clk_dis_ahb1(rcc_ahb1_t mask)
 110              		.loc 2 425 21 view .LVU23
 111              	.LBB23:
 426:./include/rcc.h **** {
 427:./include/rcc.h ****     RCC->AHB1ENR &= ~mask;
 112              		.loc 2 427 5 view .LVU24
 113              		.loc 2 427 18 is_stmt 0 view .LVU25
 114 0052 1A6B     		ldr	r2, [r3, #48]
 115 0054 22F00102 		bic	r2, r2, #1
 116 0058 1A63     		str	r2, [r3, #48]
 117              	.LVL12:
 118              		.loc 2 427 18 view .LVU26
 119              	.LBE23:
 120              	.LBE22:
  65:src/main.c    **** 
  66:src/main.c    ****     /* GPIOB clock should be enabled  ---------------------|*/
  67:src/main.c    ****     rcc_clk_en_ahb1(RCC_AHB1_GPIOB);                   /*<-|*/                  /*[ok]*/
 121              		.loc 1 67 5 is_stmt 1 view .LVU27
 122              	.LBB24:
 123              	.LBI24:
 383:./include/rcc.h **** {
 124              		.loc 2 383 21 view .LVU28
 125              	.LBB25:
 385:./include/rcc.h **** }
 126              		.loc 2 385 5 view .LVU29
 385:./include/rcc.h **** }
 127              		.loc 2 385 18 is_stmt 0 view .LVU30
 128 005a 1A6B     		ldr	r2, [r3, #48]
 129 005c 42F00202 		orr	r2, r2, #2
 130 0060 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 12


 131              	.LVL13:
 385:./include/rcc.h **** }
 132              		.loc 2 385 18 view .LVU31
 133              	.LBE25:
 134              	.LBE24:
  68:src/main.c    **** 
  69:src/main.c    ****     /* GPIOB clock should be reset ------------------------|*/
  70:src/main.c    ****     rcc_rst_ahb1(RCC_AHB1_GPIOB);                      /*<-|*/                  /*[ok?]*/ //TODO: Q
 135              		.loc 1 70 5 is_stmt 1 view .LVU32
 136              	.LBB26:
 137              	.LBI26:
 428:./include/rcc.h **** }
 429:./include/rcc.h **** 
 430:./include/rcc.h **** /** ### rcc:reset:AHB1
 431:./include/rcc.h ****  * @ingroup public_rcc
 432:./include/rcc.h ****  * @brief Reset AHB1 peripherial/s.
 433:./include/rcc.h ****  * 
 434:./include/rcc.h ****  * Allow reset following peripherials setting and clear RCC_AHB1RSTR register:
 435:./include/rcc.h ****  *  * GPIO[A,B,C,...I].
 436:./include/rcc.h ****  *  * CRC.
 437:./include/rcc.h ****  *  * Backup SRAM interface.
 438:./include/rcc.h ****  *  * CCM Data RAM interface.
 439:./include/rcc.h ****  *  * DMA[1:2].
 440:./include/rcc.h ****  *  * Ethernet [MAC, TX, RX, PTP].
 441:./include/rcc.h ****  *  * USB [HS, HS_ULPI].
 442:./include/rcc.h ****  *
 443:./include/rcc.h ****  * @param[in] mask AHB1 Peripheral/s mask to be reset.
 444:./include/rcc.h ****  * 
 445:./include/rcc.h ****  * @return None.
 446:./include/rcc.h ****  * 
 447:./include/rcc.h ****  * @note 1. You can reset multiple peripherals at time passing each of them 
 448:./include/rcc.h ****  *          with an OR operator.
 449:./include/rcc.h ****  * @note 2. It is a forced inline function.
 450:./include/rcc.h ****  * 
 451:./include/rcc.h ****  * E.g. @n
 452:./include/rcc.h ****  * For one peripheral reset:
 453:./include/rcc.h ****  * @code
 454:./include/rcc.h ****  * ...
 455:./include/rcc.h ****  * // This reset GPIOA peripheral
 456:./include/rcc.h ****  * rcc_rst_ahb1(RCC_AHB1_GPIOA);
 457:./include/rcc.h ****  * ...
 458:./include/rcc.h ****  * @endcode
 459:./include/rcc.h ****  * For multiple peripheral reset:
 460:./include/rcc.h ****  * @code
 461:./include/rcc.h ****  * ...
 462:./include/rcc.h ****  * // This reset GPIOA & GPIOB peripherals
 463:./include/rcc.h ****  * rcc_rst_ahb1(RCC_AHB1_GPIOA | RCC_AHB1_GPIOB);
 464:./include/rcc.h ****  * ...
 465:./include/rcc.h ****  * @endcode
 466:./include/rcc.h ****  */
 467:./include/rcc.h **** __FORCE_INLINE void rcc_rst_ahb1(rcc_ahb1_t mask)
 138              		.loc 2 467 21 view .LVU33
 139              	.LBB27:
 468:./include/rcc.h **** {
 469:./include/rcc.h ****     RCC->AHB1RSTR |= mask;
 140              		.loc 2 469 5 view .LVU34
 141              		.loc 2 469 19 is_stmt 0 view .LVU35
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 13


 142 0062 1A69     		ldr	r2, [r3, #16]
 143 0064 42F00202 		orr	r2, r2, #2
 144 0068 1A61     		str	r2, [r3, #16]
 470:./include/rcc.h ****     RCC->AHB1RSTR &= ~mask;
 145              		.loc 2 470 5 is_stmt 1 view .LVU36
 146              		.loc 2 470 19 is_stmt 0 view .LVU37
 147 006a 1A69     		ldr	r2, [r3, #16]
 148 006c 22F00202 		bic	r2, r2, #2
 149 0070 1A61     		str	r2, [r3, #16]
 150              	.LVL14:
 151              		.loc 2 470 19 view .LVU38
 152              	.LBE27:
 153              	.LBE26:
  71:src/main.c    **** 
  72:src/main.c    ****     /* GPIOB clock should be disabled ---------------------|*/
  73:src/main.c    ****     rcc_clk_dis_ahb1(RCC_AHB1_GPIOB);                  /*<-|*/                  /*[ok]*/
 154              		.loc 1 73 5 is_stmt 1 view .LVU39
 155              	.LBB28:
 156              	.LBI28:
 425:./include/rcc.h **** {
 157              		.loc 2 425 21 view .LVU40
 158              	.LBB29:
 427:./include/rcc.h **** }
 159              		.loc 2 427 5 view .LVU41
 427:./include/rcc.h **** }
 160              		.loc 2 427 18 is_stmt 0 view .LVU42
 161 0072 1A6B     		ldr	r2, [r3, #48]
 162 0074 22F00202 		bic	r2, r2, #2
 163 0078 1A63     		str	r2, [r3, #48]
 164              	.LVL15:
 427:./include/rcc.h **** }
 165              		.loc 2 427 18 view .LVU43
 166              	.LBE29:
 167              	.LBE28:
  74:src/main.c    **** 
  75:src/main.c    ****     /* GPIOA & GPIOB clock should be enabled ------------------------|*/
  76:src/main.c    ****     rcc_clk_en_ahb1(RCC_AHB1_GPIOA | RCC_AHB1_GPIOB);            /*<-|*/        /*[ok]*/
 168              		.loc 1 76 5 is_stmt 1 view .LVU44
 169              	.LBB30:
 170              	.LBI30:
 383:./include/rcc.h **** {
 171              		.loc 2 383 21 view .LVU45
 172              	.LBB31:
 385:./include/rcc.h **** }
 173              		.loc 2 385 5 view .LVU46
 385:./include/rcc.h **** }
 174              		.loc 2 385 18 is_stmt 0 view .LVU47
 175 007a 1A6B     		ldr	r2, [r3, #48]
 176 007c 42F00302 		orr	r2, r2, #3
 177 0080 1A63     		str	r2, [r3, #48]
 178              	.LVL16:
 385:./include/rcc.h **** }
 179              		.loc 2 385 18 view .LVU48
 180              	.LBE31:
 181              	.LBE30:
  77:src/main.c    **** 
  78:src/main.c    ****     /* GPIOA & GPIOB clock should be disabled -----------------------|*/
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 14


  79:src/main.c    ****     rcc_clk_dis_ahb1(RCC_AHB1_GPIOA | RCC_AHB1_GPIOB);           /*<-|*/        /*[ok]*/
 182              		.loc 1 79 5 is_stmt 1 view .LVU49
 183              	.LBB32:
 184              	.LBI32:
 425:./include/rcc.h **** {
 185              		.loc 2 425 21 view .LVU50
 186              	.LBB33:
 427:./include/rcc.h **** }
 187              		.loc 2 427 5 view .LVU51
 427:./include/rcc.h **** }
 188              		.loc 2 427 18 is_stmt 0 view .LVU52
 189 0082 1A6B     		ldr	r2, [r3, #48]
 190 0084 22F00302 		bic	r2, r2, #3
 191 0088 1A63     		str	r2, [r3, #48]
 192              	.LVL17:
 193              	.L2:
 427:./include/rcc.h **** }
 194              		.loc 2 427 18 view .LVU53
 195              	.LBE33:
 196              	.LBE32:
  80:src/main.c    **** 
  81:src/main.c    ****     while(1)
 197              		.loc 1 81 5 is_stmt 1 discriminator 1 view .LVU54
  82:src/main.c    ****     {
  83:src/main.c    ****         delay_ms(1);
 198              		.loc 1 83 9 discriminator 1 view .LVU55
 199 008a 0120     		movs	r0, #1
 200 008c FFF7FEFF 		bl	delay_ms
 201              	.LVL18:
  81:src/main.c    ****     {
 202              		.loc 1 81 10 discriminator 1 view .LVU56
 203 0090 FBE7     		b	.L2
 204              	.L6:
 205 0092 00BF     		.align	2
 206              	.L5:
 207 0094 00000101 		.word	16842752
 208 0098 00380240 		.word	1073887232
 209              		.cfi_endproc
 210              	.LFE147:
 212              		.text
 213              	.Letext0:
 214              		.file 3 "e:\\david\\documents\\megasync\\trabajo\\stm\\.dspboardsdk\\gcc\\arm-none-eabi\\include\\
 215              		.file 4 "e:\\david\\documents\\megasync\\trabajo\\stm\\.dspboardsdk\\gcc\\arm-none-eabi\\include\\
 216              		.file 5 "E:/David/Documents/MEGAsync/Trabajo/STM/.dspboardSDK/packs/STM32CubeF4/Drivers/CMSIS/Devi
 217              		.file 6 "./include/delay.h"
ARM GAS  C:\Users\David\AppData\Local\Temp\ccEtV0sY.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\David\AppData\Local\Temp\ccEtV0sY.s:20     .text.startup.main:00000000 $t
C:\Users\David\AppData\Local\Temp\ccEtV0sY.s:27     .text.startup.main:00000000 main
C:\Users\David\AppData\Local\Temp\ccEtV0sY.s:207    .text.startup.main:00000094 $d

UNDEFINED SYMBOLS
rcc_sysclk_select
rcc_pll_param_cpte
rcc_pll_param_clr
rcc_pll_param_set
delay_ms
